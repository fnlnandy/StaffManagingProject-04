/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package fnln.andy.gpcp.ui;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import fnln.andy.gpcp.DBControl;
import fnln.andy.gpcp.core.Employee;
import fnln.andy.gpcp.core.NumberToLetter;
import fnln.andy.gpcp.core.PseudoDate;
import fnln.andy.gpcp.core.Util;
import java.io.FileNotFoundException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andy
 */
public class MonthlyPayUi extends javax.swing.JDialog {

    /**
     * Creates new form MonthlyPayUi
     */
    public MonthlyPayUi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void initDataWithEmployee(Employee employee)
    {
        DefaultTableModel model = Util.getDefaultTableModel(jCurrentEmployeeTable);
        
        
        model.setRowCount(0);
        model.addRow(new Object[] { employee.getNumEmp(),
                                    employee.getNom(),
                                    employee.getPrenom(),
                                    employee.getPoste(),
                                    employee.getSalaire()
                                  });
        m_CurrentEmployee = employee;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFilePathLabel = new javax.swing.JLabel();
        jFilePathTextField = new javax.swing.JTextField();
        jOpenFileDialogButton = new javax.swing.JButton();
        jCurrentEmployeeScrollPane = new javax.swing.JScrollPane();
        jCurrentEmployeeTable = new javax.swing.JTable();
        jGenerateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jFilePathLabel.setText("Emplacement du fichier:");

        jOpenFileDialogButton.setText("Sauvegarder sous...");
        jOpenFileDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenFileDialogButtonActionPerformed(evt);
            }
        });

        jCurrentEmployeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numéro de l'employé", "Nom de l'employé", "Prénom de l'employé", "Poste de l'employé", "Salaire de l'employé"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jCurrentEmployeeTable.setColumnSelectionAllowed(true);
        jCurrentEmployeeScrollPane.setViewportView(jCurrentEmployeeTable);
        jCurrentEmployeeTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jGenerateButton.setText("Générer");
        jGenerateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGenerateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jOpenFileDialogButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jFilePathLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jFilePathTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                    .addComponent(jCurrentEmployeeScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jGenerateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFilePathLabel)
                    .addComponent(jFilePathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jOpenFileDialogButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCurrentEmployeeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jGenerateButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jOpenFileDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenFileDialogButtonActionPerformed
        // TODO: add something here
    }//GEN-LAST:event_jOpenFileDialogButtonActionPerformed

    private void addParagraphToDoc(Document doc, String text)
    {
        Paragraph p = new Paragraph(text);
        
        doc.add(p);
    }
    
    private void addParagraphToDoc(Document doc, String[] text)
    {
        for (String s : text)
        {
            addParagraphToDoc(doc, s);
        }
    }
    
    private String getCorrectSalary(int salary)
    {
        String retVal = String.valueOf(salary);
        
        retVal += " Ar (";
        retVal += NumberToLetter.convertToLetter(salary);
        retVal += " Ariary)";
        
        return retVal;
    }
    
    private void jGenerateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGenerateButtonActionPerformed
        String path = jFilePathTextField.getText();
        PdfWriter pdfWriter = null;
        
        try {
            pdfWriter = new PdfWriter(path);
        } catch (FileNotFoundException e) { e.printStackTrace(); }
        
        if (pdfWriter == null)
            return;
        
        PdfDocument pdfDocument = new PdfDocument(pdfWriter);
        final PseudoDate now = PseudoDate.getCurrentDate();
        final String[] toWrite = new String[] {
            "Date: " + now.constructStringDate(),
            "Nom: " + m_CurrentEmployee.getNom(),
            "Prénoms: " + m_CurrentEmployee.getPrenom(),
            "Poste: " + m_CurrentEmployee.getPoste(),
            "Nombre d'absences: " + DBControl.deferPointageController().getAbsencesCount(m_CurrentEmployee, now),
            "Montant: " + getCorrectSalary(m_CurrentEmployee.getSalaire())
        };
        
        pdfDocument.addNewPage();
        
        Document doc = new Document(pdfDocument);
        
        addParagraphToDoc(doc, toWrite);
        
        doc.close();
    }//GEN-LAST:event_jGenerateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonthlyPayUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonthlyPayUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonthlyPayUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonthlyPayUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MonthlyPayUi dialog = new MonthlyPayUi(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private Employee m_CurrentEmployee;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jCurrentEmployeeScrollPane;
    private javax.swing.JTable jCurrentEmployeeTable;
    private javax.swing.JLabel jFilePathLabel;
    private javax.swing.JTextField jFilePathTextField;
    private javax.swing.JButton jGenerateButton;
    private javax.swing.JButton jOpenFileDialogButton;
    // End of variables declaration//GEN-END:variables
}
